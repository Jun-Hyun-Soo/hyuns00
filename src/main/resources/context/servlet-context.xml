<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- #. DataBase, JavaMail Properties -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:/properties/fileupload.properties</beans:value>
				<beans:value>classpath:/properties/javamail.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/upload/**" location="${file.uploadPathMapping}" />
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" 	/>
		<beans:property name="suffix" value=".jsp" 				/>
		<beans:property name="order"  value="2"					/>
	</beans:bean>
	
	<!-- #. BeanNameViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>		
	
	<!-- #. tilesViewResolver -->
     <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
         <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
         <beans:property name="order" value="1" />
     </beans:bean>

	<!-- #. tilesConfigurer -->
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions" value="classpath:/context/tiles-context.xml" />
    </beans:bean>

	<!-- #. FileUpload multipartResolver -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="10485760" />
        <beans:property name="maxInMemorySize" value="5242880" />        
        <beans:property name="defaultEncoding" value="utf-8" />
    </beans:bean>

	<!-- #. FileUpload uploadPath -->
    <beans:bean id="uploadPathBase" class="java.lang.String">
        <beans:constructor-arg value="${file.uploadPathBase}"></beans:constructor-arg>
    </beans:bean>

	<!-- #. FileUpload uploadPath Bbs -->
    <beans:bean id="uploadPathBbs" class="java.lang.String">
        <beans:constructor-arg value="${file.uploadPathBbs}"></beans:constructor-arg>
    </beans:bean>

	<!-- #. FileUpload uploadPath Login -->
    <beans:bean id="uploadPathLogin" class="java.lang.String">
        <beans:constructor-arg value="${file.uploadPathLogin}"></beans:constructor-arg>
    </beans:bean>

	<!-- #. jsonView -->
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView">
		<beans:property name="contentType" value="application/json;charset=UTF-8"></beans:property>
	</beans:bean>
	
	<!-- #. jacksonMessageConverter -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />	
	
	<!-- #. JavaMailSenderImpl -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="${mail.host}" />
		<beans:property name="port" value="${mail.port}" />
		<beans:property name="defaultEncoding" value="${mail.defaultEncoding}" />
		<beans:property name="username" value="${mail.username}" />
		<beans:property name="password" value="${mail.password}" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtps.auth">true</beans:prop>
			<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- #. Component Scan -->
	<context:component-scan base-package="com.home.app" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
</beans:beans>

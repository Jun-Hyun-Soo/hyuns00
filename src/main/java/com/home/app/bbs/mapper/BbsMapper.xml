<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.home.app.bbs.dao.BbsDao"> <!--이 sql 문장과 매핑될 인터페이스의 완전한 경로-->
    <resultMap id="bbsResultMap" type="com.home.app.bbs.dto.BbsDto">
        <id     property="no"    		column="NO"				jdbcType="INTEGER" 	javaType="java.lang.Integer" />
        <result property="viewNo" 		column="VIEW_NO"		jdbcType="INTEGER" 	javaType="java.lang.Integer" />
        <result property="preNo" 		column="PRE_NO"			jdbcType="INTEGER" 	javaType="java.lang.Integer" />
        <result property="subNo" 		column="SUB_NO"			jdbcType="FLOAT" 	javaType="java.lang.Float" />
        <result property="depNo" 		column="DEP_NO"			jdbcType="INTEGER" 	javaType="java.lang.Integer" />
        <result property="comCount" 	column="COM_COUNT"		jdbcType="INTEGER" 	javaType="java.lang.Integer" />
        <result property="viewCount" 	column="VIEW_COUNT"		jdbcType="INTEGER" 	javaType="java.lang.Integer" />
        <result property="totalCount" 	column="TOTAL_COUNT"	jdbcType="INTEGER" 	javaType="java.lang.Integer" />
        <result property="bbsName" 		column="BBS_NAME"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="userId" 		column="USER_ID"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="userPw" 		column="USER_PW"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="userName" 	column="USER_NAME"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="userEmail" 	column="USER_EMAIL"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="userIp" 		column="USER_IP"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="subject" 		column="SUBJECT"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="noticeYn" 	column="NOTICE_YN"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="regDate" 		column="REG_DATE"		jdbcType="VARCHAR" 	javaType="java.lang.String" />        
        <result property="content" 		column="CONTENT"		jdbcType="CLOB" 	javaType="java.lang.String" />
	</resultMap>
	
    <resultMap id="bbsCommentResultMap" type="com.home.app.bbs.dto.BbsCommentDto">
        <id     property="no"    		column="NO"				jdbcType="INTEGER" 	javaType="java.lang.Integer" />
        <result property="preNo" 		column="PRE_NO"			jdbcType="INTEGER" 	javaType="java.lang.Integer" />
        <result property="subNo" 		column="SUB_NO"			jdbcType="FLOAT" 	javaType="java.lang.Float" />
        <result property="depNo" 		column="DEP_NO"			jdbcType="INTEGER" 	javaType="java.lang.Integer" />
        <result property="bbsName" 		column="BBS_NAME"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="userId" 		column="USER_ID"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="userPw" 		column="USER_PW"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="userName" 	column="USER_NAME"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="userIp" 		column="USER_IP"		jdbcType="VARCHAR" 	javaType="java.lang.String" />
        <result property="regDate" 		column="REG_DATE"		jdbcType="VARCHAR" 	javaType="java.lang.String" />        
        <result property="content" 		column="CONTENT"		jdbcType="CLOB" 	javaType="java.lang.String" />
	</resultMap>	
	
	<sql id="searchBbs">
		<choose>
			<when test="searchClass == 'ALL' and searchKeyword != null and searchKeyword != ''">
		       AND (
		       			B.USER_NAME LIKE #{searchKeyword} || '%' 
		        	 OR B.SUBJECT LIKE #{searchKeyword} || '%' 
		        	 OR B.CONTENT LIKE #{searchKeyword} || '%'
		           )
			</when> 
			<when test="searchClass == 'USER_NAME' and searchKeyword != null and searchKeyword != ''">
		       AND B.USER_NAME LIKE #{searchKeyword} || '%'  
			</when> 
			<when test="searchClass == 'SUBJECT' and searchKeyword != null and searchKeyword != ''">
		       AND B.SUBJECT LIKE #{searchKeyword} || '%'  
			</when> 
			<when test="searchClass == 'CONTENT' and searchKeyword != null and searchKeyword != ''"> 
		       AND B.CONTENT LIKE #{searchKeyword} || '%'  
			</when> 
		</choose>
	</sql>

	<select id="selectBbsCount" parameterType="com.home.app.bbs.dto.BbsSearchDto" resultType="java.lang.Integer">
		SELECT 
		       /*+ INDEX_FFS(BBS, IX_BBS_NAME_NOTICE_YN) */ 
		       COUNT( *) TOTAL_COUNT
		  FROM BBS B
		 WHERE 1 = 1 
		   AND BBS_NAME = #{bbsName} 
		   AND NOTICE_YN = 'N'  		
		<include refid="searchBbs" />
    </select>

	<select id="selectBbsDeleteCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT COUNT( *) TOTAL_COUNT
		  FROM BBS 
		 WHERE 1 = 1 
		   AND PRE_NO = #{no} 
    </select>

	<select id="selectBbsCommentDeleteCount" parameterType="com.home.app.bbs.dto.BbsCommentDto" resultType="java.lang.Integer">
		SELECT COUNT( *) TOTAL_COUNT
		  FROM BBS_COMMENT 
		 WHERE 1 = 1 
		   AND PRE_NO = #{preNo} 
		   AND DEP_NO <![CDATA[>]]> #{depNo}
    </select>
    
	<select id="selectBbsList" parameterType="com.home.app.bbs.dto.BbsSearchDto" resultMap="bbsResultMap">
		SELECT B.NO, 
		       0 AS VIEW_NO,
		       B.SUB_NO, 
		       B.DEP_NO,
		       B.COM_COUNT, 
		       B.VIEW_COUNT, 
		       B.USER_ID, 
		       B.USER_NAME, 
		       B.SUBJECT, 
		       TO_CHAR(B.REG_DATE, 'YYYY-MM-DD') AS REG_DATE, 
		       B.NOTICE_YN, 
		       B.CONTENT 
		  FROM 
		       ( 
		       SELECT 
		              /*+ INDEX_DESC(BBS, IX_BBS_NAME_NOTICE_YN) */ 
		              ROWNUM RN, 
		              ROWID RI 
		         FROM BBS 
		        WHERE BBS_NAME = #{bbsName} 
		          AND NOTICE_YN = 'Y' 
		       ) A, 
		       BBS B 
		 WHERE 1 = 1 
		   AND A.RI = B.ROWID 
	     UNION ALL
		SELECT 
		       /*+ INDEX_DESC(BBS, IX_BBS_NAME_NO) */ 
		       B.NO, 
		       ROW_NUMBER() OVER (ORDER BY B.NO DESC) AS VIEW_NO,
		       B.SUB_NO,
		       B.DEP_NO,
		       B.COM_COUNT, 
		       B.VIEW_COUNT, 
		       B.USER_ID, 
		       B.USER_NAME, 
		       B.SUBJECT, 
		       TO_CHAR(B.REG_DATE, 'YYYY-MM-DD') AS REG_DATE, 
		       B.NOTICE_YN, 
		       B.CONTENT 
		  FROM BBS B
		 WHERE NO <![CDATA[<=]]> 
		       ( 
		       SELECT NO 
		         FROM 
		              ( 
		              SELECT ROW_NUMBER() OVER(ORDER BY NO DESC, ROWID DESC) RN, 
		                     NO 
		                FROM BBS B
		               WHERE BBS_NAME = #{bbsName}
		                 AND NOTICE_YN = 'N' 
					<include refid="searchBbs" />		                 
		              ) 
		        WHERE 1 = 1 
		          AND RN = ((${page} - 1) * ${listSize} + 1) 
		          AND ROWNUM = 1 
		       ) 
		   AND ROWNUM <![CDATA[<=]]> ${listSize} 
		   AND NOTICE_YN = 'N'
		<include refid="searchBbs" />
		 ORDER BY NOTICE_YN DESC, SUB_NO DESC 		   
    </select>
	
    <select id="selectBbsView" parameterType="java.lang.Integer" resultMap="bbsResultMap">
		SELECT NO, 
		       PRE_NO,
		       SUB_NO,
		       DEP_NO,
		       COM_COUNT,
		       VIEW_COUNT,	
		       USER_ID, 
		       USER_NAME, 
		       USER_EMAIL, 
		       SUBJECT, 
		       TO_CHAR(REG_DATE, 'YYYY-MM-DD HH:MI:SS') AS REG_DATE, 
		       CONTENT 
		  FROM BBS 
		 WHERE NO = #{no} 
    </select>

    <select id="selectBbsEdit" parameterType="java.lang.Integer" resultMap="bbsResultMap">
		SELECT NO, 
		       USER_ID, 
		       USER_PW, 
		       USER_NAME, 
		       USER_EMAIL, 
		       SUBJECT, 
		       NOTICE_YN,
		       TO_CHAR(REG_DATE, 'YYYY-MM-DD HH:MI:SS') AS REG_DATE, 
		       CONTENT 
		  FROM BBS 
		 WHERE NO = #{no} 
    </select>

    <select id="selectBbsReply" parameterType="java.lang.Integer" resultMap="bbsResultMap">
		SELECT NO, 
		       PRE_NO,
		       SUB_NO,
		       DEP_NO,
		       '' AS USER_ID, 
		       '' AS USER_NAME, 
		       '' AS USER_EMAIL, 
		       'RE: ' || SUBJECT AS SUBJECT, 
		       'N' AS NOTICE_YN,
		       '' AS REG_DATE, 
		       '' AS CONTENT
		  FROM BBS 
		 WHERE NO = #{no} 
    </select>

    <select id="selectBbsDelete" parameterType="java.lang.Integer" resultMap="bbsResultMap">
		SELECT NO, 
		       COM_COUNT, 
		       USER_ID,
		       USER_PW,
		       USER_NAME, 
		       SUBJECT, 
		       TO_CHAR(REG_DATE, 'YYYY-MM-DD HH:MI:SS') AS REG_DATE, 
		       CONTENT  
		  FROM BBS 
		 WHERE NO = #{no} 
    </select>
	
    <select id="selectBbsCommentList" parameterType="java.lang.Integer" resultMap="bbsCommentResultMap">
		SELECT NO, 
		       PNO,	
		       PRE_NO, 
		       SUB_NO, 
		       DEP_NO, 
		       BBS_NAME, 
		       USER_ID, 
		       USER_PW, 
		       USER_NAME, 
		       USER_IP, 
		       TO_CHAR(REG_DATE, 'YYYY-MM-DD HH:MI:SS') AS REG_DATE,
		       CONTENT 
		  FROM BBS_COMMENT
		 WHERE PNO = #{pno} 
		 ORDER BY PRE_NO DESC, SUB_NO DESC
    </select>
	
    <select id="selectBbsComment" parameterType="java.lang.Integer" resultMap="bbsCommentResultMap">
		SELECT NO, 
		       PNO,	
		       PRE_NO, 
		       SUB_NO, 
		       DEP_NO, 
		       BBS_NAME, 
		       USER_ID, 
		       USER_PW, 
		       USER_NAME, 
		       USER_IP, 
		       TO_CHAR(REG_DATE, 'YYYY-MM-DD HH:MI:SS') AS REG_DATE,
		       CONTENT 
		  FROM BBS_COMMENT
		 WHERE NO = #{no} 
    </select>

    <insert id="insertBbs" parameterType="com.home.app.bbs.dto.BbsDto">    	
		INSERT INTO BBS 
		       ( 
		           NO, 
		           PRE_NO,
		           SUB_NO,
		           DEP_NO,
		           COM_COUNT,
		           VIEW_COUNT,
		           BBS_NAME,
		           USER_ID,
		           USER_PW,
		           USER_NAME,
		           USER_EMAIL,
		           SUBJECT,
		           USER_IP,
		           NOTICE_YN, 
		           REG_DATE, 
		           CONTENT 
		       ) 
		       VALUES 
		       ( 
		           BBS_NO.NEXTVAL, 
		           BBS_NO.CURRVAL,
		           BBS_SUB_NO.NEXTVAL,
		           0,
		           0,
		           0,
		           #{bbsName},
		           #{userId},
		           #{userPw},
		           #{userName},
		           #{userEmail},
		           #{subject},
		           #{userIp},
		           #{noticeYn}, 
		           SYSDATE, 
		           #{content}
		       )
		<selectKey keyProperty="no" resultType="java.lang.Integer" order="AFTER">
			SELECT BBS_NO.CURRVAL FROM DUAL
		</selectKey>		       
    </insert>
    
    <insert id="insertBbsReply" parameterType="com.home.app.bbs.dto.BbsDto">    	
		<selectKey keyProperty="no" resultType="java.lang.Integer" order="BEFORE">
			SELECT BBS_NO.NEXTVAL FROM DUAL
		</selectKey>		       
		INSERT INTO BBS 
		       ( 
		           NO, 
		           PRE_NO,
		           SUB_NO,
		           DEP_NO,
		           COM_COUNT,
		           VIEW_COUNT,
		           BBS_NAME,
		           USER_ID,
		           USER_PW,
		           USER_NAME,
		           USER_EMAIL,
		           SUBJECT,
		           USER_IP,
		           NOTICE_YN, 
		           REG_DATE, 
		           CONTENT 
		       ) 
		SELECT #{no}, 
		       #{preNo}, 
		       NVL((#{subNo} + MAX(SUB_NO)) / 2.0, #{subNo} / 2.0), 
		       #{depNo} + 1, 
		       0, 
		       0, 
		       #{bbsName}, 
		       #{userId}, 
		       #{userPw}, 
		       #{userName}, 
		       #{userEmail}, 
		       #{subject}, 
		       #{userIp}, 
		       #{noticeYn}, 
		       SYSDATE, 
		       #{content} 
		  FROM BBS 
		 WHERE SUB_NO <![CDATA[<]]> #{subNo}
    </insert>

    <insert id="insertBbsComment" parameterType="com.home.app.bbs.dto.BbsCommentDto">    	
		INSERT INTO BBS_COMMENT 
		       ( 
		           NO, 
		           PNO,
		           PRE_NO,
		           SUB_NO,
		           DEP_NO,
		           BBS_NAME,
		           USER_ID,
		           USER_PW,
		           USER_NAME,
		           USER_IP,
		           REG_DATE, 
		           CONTENT 
		       ) 
		       VALUES 
		       ( 
		           BBS_COMMENT_NO.NEXTVAL, 
		           #{pno},
		           BBS_COMMENT_NO.CURRVAL,
		           BBS_COMMENT_SUB_NO.NEXTVAL,
		           0,
		           #{bbsName},
		           #{userId},
		           #{userPw},
		           #{userName},
		           #{userIp},
		           SYSDATE, 
		           #{content}
		       )
		<selectKey keyProperty="no" resultType="java.lang.Integer" order="AFTER">
			SELECT BBS_COMMENT_NO.CURRVAL FROM DUAL
		</selectKey>		       
    </insert>

    <insert id="insertBbsCommentReply" parameterType="com.home.app.bbs.dto.BbsCommentDto">    	
		<selectKey keyProperty="no" resultType="java.lang.Integer" order="BEFORE">
			SELECT BBS_COMMENT_NO.NEXTVAL FROM DUAL
		</selectKey>		       
		INSERT INTO BBS_COMMENT 
		       ( 
		           NO, 
		           PNO,
		           PRE_NO,
		           SUB_NO,
		           DEP_NO,
		           BBS_NAME,
		           USER_ID,
		           USER_PW,
		           USER_NAME,
		           USER_IP,
		           REG_DATE, 
		           CONTENT 
		       ) 
		SELECT #{no}, 
		       #{pno},
		       #{preNo}, 
		       NVL((#{subNo} + MAX(SUB_NO)) / 2.0, #{subNo} / 2.0), 
		       #{depNo} + 1, 
		       #{bbsName}, 
		       #{userId}, 
		       #{userPw}, 
		       #{userName}, 
		       #{userIp}, 
		       SYSDATE, 
		       #{content} 
		  FROM BBS 
		 WHERE SUB_NO <![CDATA[<]]> #{subNo}
    </insert>

    <update id="updateBbs" parameterType="com.home.app.bbs.dto.BbsDto">
		UPDATE BBS 
		   SET USER_NAME = #{userName}, 
		       USER_EMAIL = #{userEmail}, 
		       SUBJECT = #{subject}, 
		       USER_IP = #{userIp}, 
		       NOTICE_YN = #{noticeYn},
		       REG_DATE = SYSDATE, 
		       CONTENT = #{content} 
		 WHERE NO = #{no}  
    </update>

    <update id="updateBbsDelete" parameterType="com.home.app.bbs.dto.BbsDto">
		UPDATE BBS 
		   SET SUBJECT = #{userName} || '님이 글을 삭제하였습니다.', 
		       USER_IP = #{userIp}, 
		       REG_DATE = SYSDATE, 
		       CONTENT = #{userName} || '님이 글을 삭제하였습니다.' 
		 WHERE NO = #{no}  
    </update>

    <update id="updateBbsComment" parameterType="com.home.app.bbs.dto.BbsCommentDto">
		UPDATE BBS_COMMENT 
		   SET USER_NAME = #{userName}, 
		       USER_IP = #{userIp}, 
		       REG_DATE = SYSDATE, 
		       CONTENT = #{content} 
		 WHERE NO = #{no}  
    </update>

    <update id="updateBbsCommentDelete" parameterType="com.home.app.bbs.dto.BbsCommentDto">
		UPDATE BBS_COMMENT 
		   SET USER_IP = #{userIp}, 
		       REG_DATE = SYSDATE, 
		       CONTENT = #{userName} || '님이 글을 삭제하였습니다.' 
		 WHERE NO = #{no}  
    </update>

    <update id="updateBbsViewCount" parameterType="java.lang.Integer">
		UPDATE BBS
		   SET VIEW_COUNT = VIEW_COUNT + 1		
		 WHERE NO = #{no} 
    </update>

    <update id="updateBbsComCountPlus" parameterType="java.lang.Integer">
		UPDATE BBS
		   SET COM_COUNT = COM_COUNT + 1		
		 WHERE NO = #{pno} 
    </update>

    <update id="updateBbsComCountMinus" parameterType="java.lang.Integer">
		UPDATE BBS
		   SET COM_COUNT = COM_COUNT - 1		
		 WHERE NO = #{pno} 
    </update>

    <delete id="deleteBbs" parameterType="java.lang.Integer">
		DELETE FROM BBS
		 WHERE NO = #{no} 
    </delete>

    <delete id="deleteBbsCommentList" parameterType="java.lang.Integer">
		DELETE FROM BBS_COMMENT
		 WHERE PNO = #{pno} 
    </delete>

    <delete id="deleteBbsComment" parameterType="java.lang.Integer">
		DELETE FROM BBS_COMMENT
		 WHERE NO = #{no} 
    </delete>
</mapper>
